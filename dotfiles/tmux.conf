# At the first run you have to install plugins: bind-key + I
# note: see all info including default keybindings using "man tmux".

### Prefix key ###
# set -g prefix C-Space
# unbind C-b
# bind C-Space send-prefix

### base settings ###
set -g mouse on
set -g default-terminal "screen-256color"
set -g history-limit 100000
set -sg repeat-time 500
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on
setw -g aggressive-resize on
set -g buffer-limit 5

# Close current window by prefix + Ctrl+q (default: prefix + &)
bind C-q confirm-before -p "Kill current window? (y/n)" kill-window

# Close current pane by prefix + Ctrl-w (default: prefix + x)
bind C-w kill-pane
# bind C-w confirm-before -p "Kill current pane? (y/n)" kill-pane

# Hide status bar on demand
#bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# enable truecolor support -> https://github.com/tmux/tmux/pull/112/commits
# Don't forget to do not run tmux with -2 flag if you want true color.
# set-option -sa terminal-overrides ",xterm*:Tc"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -sa terminal-overrides ",xterm*:Tc"

set -g status on
# set -g status-position top
set -g display-time 1200 # tmux messages interval
set -g status-interval 3 # refresh 'status-left' and 'status-right' more often
set -sg escape-time 0    # No delay for escape key press
setw -g automatic-rename off # disable auto rename windows

set -g mode-keys vi
# set -g status-keys vi    # setup vi key-bindings
# set -g @shell_mode vi    # setup vi in shell
# set-window-option -g mode-keys vi
set -g xterm-keys on
# set-window-option -g xterm-keys on

# activity ; alerts
set -g focus-events on      # focus events enabled for terminals that support them
setw -g monitor-activity on # highlight other windows if there any activity
set -g activity-action none # but don't use bell
set -g visual-bell off      # don't use bell when display a message (not sure if it works)

# clear both screen and history in current pane by prefix + Ctrl-l (default: none)
bind C-l send-keys -R \; send-keys C-l \; clear-history

### kill current process in the pane (if present)
bind k run "kill $(ps -o pid:1 --no-headers --ppid $(tmux display-message -p #{pane_pid}))"

# Log output to a text file on demand
# bind Q pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

### window ###
# create new window with a prompt
bind C command-prompt -p "Name of new window:" "new-window -n '%%' -c '#{pane_current_path}'"

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Create window by prefix + Ctrl-n (default: prefix + c)
bind C-n new-window -c "#{pane_current_path}"

#### Copy paste ###
# use Space to begin selection (default)
# use ESC to reset and exit from selection mode (but stay in copy mode) (default)
# If you want to select line, press Shift+v. To select using rectange mode, press Ctrl+v (default)
# To exit from copy mode use q (default)

# Disable auto exit from copy mode when using mouse selection
unbind -T copy-mode MouseDragEnd1Pane
unbind -T copy-mode-vi MouseDragEnd1Pane

# Swith to copy mode by prefix + enter (default: prefix + [)
bind Enter copy-mode

# Reset selection by click somewhere (more default behaviour line everywhere)
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection

# Copy
# To fix gnome terminal see refresh-client option http://man7.org/linux/man-pages/man1/tmux.1.html
bind -T copy-mode-vi C-c send -X copy-pipe "xclip -in -selection clipboard >/dev/null 2>&1"  \; refresh \; display-message "Copied selection"
# bind -T copy-mode-vi y send -X copy-pipe "xclip -in -selection clipboard >/dev/null 2>&1" \; display-message "Copied selection"
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -in -selection clipboard >/dev/null 2>&1" \; display-message "Copied selection"

# Copy the last line from normal mode (Prefix, then Alt+Enter) (don't works for all promplines)
# bind M-Enter copy-mode \; send-keys -X copy-line \; run "tmux save-buffer - | perl -pe 's/.*?] //' | tr -d '\n' | xclip -in -selection clipboard >/dev/null 2>&1" \; display-message "Copied command"

# Also if you want to disappear selection after copy then you have to use something like this:
# bind-key -T copy-mode-vi y send -X copy-selection\; run "tmux save -|xclip -sel clip >/dev/null 2>&1"

# Paste (Prefix + Ctrl+V)
bind C-v run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
# bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer" # Vim style
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" old version, disabled because didn't work properly.

# Also for mac integration see:
# https://blog.carbonfive.com/2017/08/17/copying-and-pasting-with-tmux-2-4/ and
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future + tmux yank plugin.

### Navigation keys ####
# Use Prefix + window number to switch window (default)
# Alt-arrows (without prefix) to swith panes (default: prefix + arrows)
# bind-key -n M-Left select-pane -L
# bind-key -n M-Right select-pane -R
# bind-key -n M-Up select-pane -U
# bind-key -n M-Down select-pane -D

# We have to copy these settings for copy mode to allow same navigation while current pane in copy mode
# bind-key -T copy-mode-vi -n M-Left select-pane -L
# bind-key -T copy-mode-vi -n M-Right select-pane -R
# bind-key -T copy-mode-vi -n M-Up select-pane -U
# bind-key -T copy-mode-vi -n M-Down select-pane -D

########################

# Switch between two most recent panes by Alt-\ (without prefix) (default: none)
# bind-key -n M-\ select-pane -l

# Toggle maximaze pane by Alt-z (without prefix) (default: prefix + z)
bind -n M-z resize-pane -Z

# Toggle sync commands in all panes (works for panes in normal mode) by Alt-s (without pregix) (default: none)
bind -n M-s set-window-option synchronize-panes

# Switch windows (without prefix) by Alt-, and Alt-. (visually looks like Alt-< and Alt->) (default: prefix + p or n)
bind -n M-, previous-window
bind -n M-. next-window



# bind-key -T copy-mode-vi -n M-\ select-pane -l

bind -T copy-mode-vi -n M-, previous-window
bind -T copy-mode-vi -n M-. next-window

### Keys in copy mode ###
# Use command "tmux list-keys -T copy-mode-vi" to see all list with current keybindings
# Use Ctrl + UP or DOWN to scroll by line (default)
# Use ESC to exit from selection mode, or space to start/reset selection (default)

# Add scroll by page using Ctrl + LEFT or RIGHT
bind-key -T copy-mode-vi C-Left send-keys -X page-up
bind-key -T copy-mode-vi C-Right send-keys -X page-down

# Navigation by word in copy mode by Ctrl-left or Ctrl-right (default: b and w)
# bind-key -T copy-mode-vi C-Left send-keys -X previous-word
# bind-key -T copy-mode-vi C-Right send-keys -X next-word

# Select the whole line in copy mode by Ctrl+l (default: V)
bind-key -T copy-mode-vi C-l send-keys -X select-line

# go to line by Ctrl+g (default: :) (didn't work)
# bind-key -T copy-mode-vi C-g send-keys -X goto-line

# Open search prompt (search-up) in copy mode by Ctrl-f (default: ?)
unbind -T copy-mode-vi C-f
bind-key -T copy-mode-vi C-f command-prompt -p "(search up)" "send -X search-backward \"%%%\""

# Navigate through search results by . and , (visually looks like < and >) (default: n and N)
bind-key -T copy-mode-vi '.' send-keys -X search-again
bind-key -T copy-mode-vi ',' send-keys -X search-reverse

# Select all history in the current pane by Ctrl-a (default: none)
bind-key -T copy-mode-vi C-a send-keys -X history-bottom \; send-keys -X select-line \; send-keys -X history-top

### Plugins: ###
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-save-shell-history 'on'

### Styling ###
# set -g pane-border-status bottom
# set -g pane-border-format "#P:#{pane_current_command}"

### pane border gray colors ###
set-option -g pane-border-style fg=colour237 #base02
set-option -g pane-active-border-style fg=colour242 #base01

# status line colors
set -g status-bg colour237
set -g status-fg colour255

# current window tab colors
set-window-option -g window-status-current-style fg=colour255,bold
set-window-option -g window-status-current-style bg=colour242,bold
# set-window-option -g window-status-current-style bold
# set-window-option -g window-status-style dim

# inactive windows tabs colors
# setw -g window-status-fg colour247
# setw -g window-status-bg colour237
# setw -g window-status-attr none

# disable nasty window hightlight when there is activity in inactive window
# https://unix.stackexchange.com/a/174454
# https://unix.stackexchange.com/a/120905
set-window-option -g window-status-activity-style fg=colour237
set-window-option -g window-status-activity-style bg=colour237

### tmux bar ###
set -g status-right "[%H:%M %d-%b-%y #H]"
set -g status-right-length "200"

### for tmux fingers ###
set -g @fingers-copy-command 'xclip -in -selection clipboard >/dev/null 2>&1'

### END ###
unbind R
bind R source-file ~/.tmux.conf \; display "Config reloaded..."

if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
